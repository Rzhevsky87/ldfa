version: '3'

networks:
  oktober:

services:
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: ldfa_nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "443:443"
    volumes:
      - ./../:/var/www/html
    depends_on:
      - php
      - db
      - redis
    networks:
      - oktober

  db:
    image: percona
    container_name: ldfa_db
    restart: on-failure
    tty: true
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - ./percona:/var/lib/percona
    environment:
      MYSQL_DATABASE: ldfa_db
      MYSQL_USER: laravel
      MYSQL_PASSWORD: qwe123
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: db
    networks:
      - oktober

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: ldfa_php
    volumes:
      - ./../:/var/www/html
    ports:
      - "${PHP_PORT:-9000}:9000"
    networks:
      - oktober

  composer:
    image: frojd/composer-php-7.4
    container_name: ldfa_composer
    volumes:
      - ./../:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - oktober

  redis:
    image: redis:alpine
    container_name: ldfa_redis
    volumes:
      - ./redis:/data
    restart: on-failure
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    ports:
      - ${REDIS_PORT:-6379}:6379
    networks:
      - oktober

  npm:
    image: node:14.18.0
    container_name: ldfa_npm
    volumes:
      - ./../:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: ldfa_artisan
    volumes:
      - ./../:/var/www/html
    depends_on:
      - db
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - oktober

  cron:
    build:
      context: .
      dockerfile: cron.dockerfile
    container_name: ldfa_cron
    volumes:
      - ./../:/var/www/html
    networks:
      - oktober
